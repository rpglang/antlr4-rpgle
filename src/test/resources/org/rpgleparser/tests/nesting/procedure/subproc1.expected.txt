/*===TOKENS===*/
H_SPEC                   <ctl-opt>
ID                       <dftactgrp>
'('                      <(>
SPLAT_NO                 <*no>
')'                      <)>
FREE_SEMI                <;>
DS_Standalone            <dcl-s>
ID                       <wkAlpha>
CHAR                     <char>
'('                      <(>
NUMBER                   <7>
')'                      <)>
FREE_SEMI                <;>
DS_Standalone            <dcl-s>
ID                       <wkError>
IND                      <ind>
FREE_SEMI                <;>
ID                       <wkAlpha>
'='                      <=>
StringLiteralStart       <'>
StringContent            <1140214>
StringLiteralEnd         <'>
FREE_SEMI                <;>
ID                       <ValidateDate>
'('                      <(>
')'                      <)>
FREE_SEMI                <;>
DS_ProcedureStart        <dcl-proc>
ID                       <ValidateDate>
FREE_SEMI                <;>
OP_IF                    <if>
'('                      <(>
BIF_ERROR                <%error>
')'                      <)>
FREE_SEMI                <;>
ID                       <wkError>
'='                      <=>
SPLAT_ON                 <*on>
FREE_SEMI                <;>
OP_ELSE                  <else>
FREE_SEMI                <;>
ID                       <wkError>
'='                      <=>
SPLAT_OFF                <*off>
FREE_SEMI                <;>
OP_ENDIF                 <endif>
FREE_SEMI                <;>
DS_ProcedureEnd          <end-proc>
FREE_SEMI                <;>
/*===TREE===*/
(r
  (ctl_opt
    ctl-opt
    (identifier (free_identifier (idOrKeyword dftactgrp)))
    (expression ( (expression (identifier (all (symbolicConstants *no)))) ))
    ;
  )
  (statement
    (dspec
      dcl-s
      (identifier (free_identifier (idOrKeyword wkAlpha)))
      (datatype (datatypeName char) (args ( (expression (number 7)) )))
      ;
    )
  )
  (statement
    (dspec
      dcl-s
      (identifier (free_identifier (idOrKeyword wkError)))
      (datatype (datatypeName ind))
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            (evalExpression
              (assignmentExpression
                (simpleExpression (identifier (free_identifier (idOrKeyword wkAlpha))))
                =
                (expression (literal ' 1140214 '))
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op (op_callp (identifier (free_identifier (idOrKeyword ValidateDate))) ( )))
      )
      ;
    )
  )
  (procedure
    (beginProcedure
      (freeBeginProcedure
        dcl-proc
        (identifier (free_identifier (idOrKeyword ValidateDate)))
        ;
      )
    )
    (subprocedurestatement
      (statement
        (block
          (ifstatement
            (beginif (op_if if (expression ( (expression (bif (bif_error %error))) ))) ;)
            (statement
              (free
                (baseExpression
                  (op
                    (op_eval
                      (evalExpression
                        (assignmentExpression
                          (simpleExpression (identifier (free_identifier (idOrKeyword wkError))))
                          =
                          (expression (identifier (all (symbolicConstants *on))))
                        )
                      )
                    )
                  )
                )
                ;
              )
            )
            (elsestmt (op_else else) ;)
            (statement
              (free
                (baseExpression
                  (op
                    (op_eval
                      (evalExpression
                        (assignmentExpression
                          (simpleExpression (identifier (free_identifier (idOrKeyword wkError))))
                          =
                          (expression (identifier (all (symbolicConstants *off))))
                        )
                      )
                    )
                  )
                )
                ;
              )
            )
            (endif (op_endif endif) ;)
          )
        )
      )
    )
    (endProcedure (freeEndProcedure end-proc ;))
  )
)
/*======*/